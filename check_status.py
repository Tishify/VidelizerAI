#!/usr/bin/env python3
import requests
import subprocess
import sys
import time

def check_backend():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å backend —Å–µ—Ä–≤–µ—Ä–∞"""
    try:
        response = requests.get("http://localhost:8080/", timeout=5)
        if response.status_code == 200:
            print("‚úÖ Backend (FastAPI) - –†–ê–ë–û–¢–ê–ï–¢ –Ω–∞ http://localhost:8080")
            return True
        else:
            print(f"‚ùå Backend - –û–®–ò–ë–ö–ê: {response.status_code}")
            return False
    except requests.exceptions.ConnectionError:
        print("‚ùå Backend (FastAPI) - –ù–ï –ó–ê–ü–£–©–ï–ù")
        return False
    except Exception as e:
        print(f"‚ùå Backend - –û–®–ò–ë–ö–ê: {e}")
        return False

def check_frontend():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å frontend —Å–µ—Ä–≤–µ—Ä–∞"""
    try:
        response = requests.get("http://localhost:3000/", timeout=5)
        if response.status_code == 200:
            print("‚úÖ Frontend (React) - –†–ê–ë–û–¢–ê–ï–¢ –Ω–∞ http://localhost:3000")
            return True
        else:
            print(f"‚ùå Frontend - –û–®–ò–ë–ö–ê: {response.status_code}")
            return False
    except requests.exceptions.ConnectionError:
        print("‚ùå Frontend (React) - –ù–ï –ó–ê–ü–£–©–ï–ù")
        return False
    except Exception as e:
        print(f"‚ùå Frontend - –û–®–ò–ë–ö–ê: {e}")
        return False

def check_ports():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –∫–∞–∫–∏–µ –ø–æ—Ä—Ç—ã –∑–∞–Ω—è—Ç—ã"""
    try:
        result = subprocess.run(['lsof', '-i', ':8080'], capture_output=True, text=True)
        if result.returncode == 0:
            print("üìä –ü–æ—Ä—Ç 8080 –∑–∞–Ω—è—Ç (Backend)")
        else:
            print("üìä –ü–æ—Ä—Ç 8080 —Å–≤–æ–±–æ–¥–µ–Ω")
            
        result = subprocess.run(['lsof', '-i', ':3000'], capture_output=True, text=True)
        if result.returncode == 0:
            print("üìä –ü–æ—Ä—Ç 3000 –∑–∞–Ω—è—Ç (Frontend)")
        else:
            print("üìä –ü–æ—Ä—Ç 3000 —Å–≤–æ–±–æ–¥–µ–Ω")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ—Ä—Ç–æ–≤: {e}")

def main():
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ VidelizerAI...")
    print("=" * 50)
    
    check_ports()
    print("-" * 30)
    
    backend_ok = check_backend()
    frontend_ok = check_frontend()
    
    print("-" * 30)
    if backend_ok and frontend_ok:
        print("üéâ –í–°–ï –°–ï–†–í–ò–°–´ –†–ê–ë–û–¢–ê–Æ–¢!")
        print("üì± –û—Ç–∫—Ä–æ–π—Ç–µ http://localhost:3000 –≤ –±—Ä–∞—É–∑–µ—Ä–µ")
    elif backend_ok:
        print("‚ö†Ô∏è  Backend —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ Frontend –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: cd frontend && npm start")
    elif frontend_ok:
        print("‚ö†Ô∏è  Frontend —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ Backend –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: cd backend/Analise && poetry run uvicorn main:app --host 0.0.0.0 --port 8080 --reload")
    else:
        print("‚ùå –ù–∏ –æ–¥–∏–Ω —Å–µ—Ä–≤–∏—Å –Ω–µ –∑–∞–ø—É—â–µ–Ω")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ: ./start.sh")

if __name__ == "__main__":
    main() 